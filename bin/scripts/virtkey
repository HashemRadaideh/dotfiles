#!/bin/luajit

local function notify(properties)
	local text = properties.text or ""
	local id = properties.id or 0
	-- os.execute([[notify-send "]] .. text .. [[" -r ]] .. id)
end

local threshold = 10 -- threshold is approximately equal to gravity (9.81 m/s^2

local modes = {
	CLOSED = 1,
	LAPTOP = 2,
	TENT = 3,
	TABLET = 4,
	DESKTOP = 5,
}

local states = {
	{
		check = function(x, y, z)
			return x > threshold and y > threshold and z > threshold
		end,
		mode = modes.CLOSED,
	},
	{
		check = function(x, y, z)
			return y < -threshold and z < -threshold
		end,
		mode = modes.LAPTOP,
	},
	{
		check = function(x, y, z)
			return true
		end,
		mode = modes.TENT,
	},
	{
		check = function(x, y, z)
			return true
		end,
		mode = modes.TABLET,
	},
	{
		check = function(x, y, z)
			return true
		end,
		mode = modes.DESKTOP,
	},
}

IMU = [[/sys/bus/iio/devices/iio:device0/]]

local s = tonumber(io.open(IMU .. "in_accel_scale"):read("*all"))
local x = tonumber(io.open(IMU .. "in_accel_x_raw"):read("*all")) * s
local y = tonumber(io.open(IMU .. "in_accel_y_raw"):read("*all")) * s
local z = tonumber(io.open(IMU .. "in_accel_z_raw"):read("*all")) * s
notify({ text = "IMU at (" .. x .. ", " .. y .. ", " .. z .. ")", id = 1001 })

local mode = modes.CLOSED
for i, state in ipairs(states) do
	if state.check(x, y, z) then
		notify({ text = "Device in mode " .. mode, id = 1002 })
		mode = state.mode
		break
	end
end

local allowed = 0
if mode ~= modes.CLOSED and mode ~= modes.LAPTOP then
	allowed = 1
end

os.exit(allowed)
